Index: src/Aud6/CountOccurrencesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Aud6;\r\n\r\n\r\nimport java.util.Collection;\r\n\r\npublic class CountOccurrencesTest {\r\n    public static int count1(Collection<Collection<String>> c, String str) {\r\n        int counter = 0;\r\n        for (Collection<String> collection : c) {\r\n            for (String element : collection) {\r\n                if (element.equalsIgnoreCase(str)) {\r\n                    ++counter;\r\n                }\r\n            }\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    public static int count2(Collection<Collection<String>> c, String str) {\r\n        return (int) c.stream()\r\n                .flatMap(col -> col.stream())\r\n                .filter(string -> string.equalsIgnoreCase(str))\r\n                .count();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud6/CountOccurrencesTest.java b/src/Aud6/CountOccurrencesTest.java
--- a/src/Aud6/CountOccurrencesTest.java	(revision a29b9d7c9ea4132dd355f789aed4a8e5917ac2df)
+++ b/src/Aud6/CountOccurrencesTest.java	(date 1713810950937)
@@ -18,12 +18,12 @@
 
     public static int count2(Collection<Collection<String>> c, String str) {
         return (int) c.stream()
-                .flatMap(col -> col.stream())
+                .flatMap(Collection::stream)
                 .filter(string -> string.equalsIgnoreCase(str))
                 .count();
     }
 
     public static void main(String[] args) {
-
+        //TOO STRAIGHT-FORWARD (no testcases needed)
     }
 }
\ No newline at end of file
Index: src/Aud7/BirthdayParadoxTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/BirthdayParadoxTest.java b/src/Aud7/BirthdayParadoxTest.java
new file mode 100644
--- /dev/null	(date 1713815848998)
+++ b/src/Aud7/BirthdayParadoxTest.java	(date 1713815848998)
@@ -0,0 +1,50 @@
+package Aud7;
+
+import java.util.HashSet;
+import java.util.Random;
+
+class BirthdayParadox {
+    int maxPeople;
+    static int TRIALS = 5000;
+
+    public BirthdayParadox(int i) {
+        maxPeople = i;
+    }
+
+    public void conductExperiment() {
+        for (int i = 2; i <= maxPeople; i++) {
+            System.out.printf("%d --> %.10f\n", i, runSimulation(i));
+        }
+    }
+
+    private float runSimulation(int people) {
+        int counter = 0;
+        Random random = new Random();
+        for (int i = 0; i < TRIALS; i++) {
+            if (runTrial(people, random)) {
+                ++counter;
+            }
+        }
+        return counter * 1.0f / TRIALS;
+    }
+
+    private boolean runTrial(int people, Random random) {
+        HashSet<Integer> birthdays = new HashSet<>();
+        for (int i = 0; i < people; i++) {
+            int birthday = random.nextInt(365) + 1;
+            if (birthdays.contains(birthday)) {
+                return true;
+            } else {
+                birthdays.add(birthday);
+            }
+        }
+        return false;
+    }
+}
+
+public class BirthdayParadoxTest {
+    public static void main(String[] args) {
+        BirthdayParadox bp = new BirthdayParadox(100);
+        bp.conductExperiment();
+    }
+}
Index: src/Aud7/MapIntro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/MapIntro.java b/src/Aud7/MapIntro.java
new file mode 100644
--- /dev/null	(date 1713814759269)
+++ b/src/Aud7/MapIntro.java	(date 1713814759269)
@@ -0,0 +1,50 @@
+package Aud7;
+
+import java.util.*;
+
+public class MapIntro {
+    public static void main(String[] args) {
+        //Mapite se koristat za broenje pojavuvanja na elementi, za grupiranje
+        //TreeMap
+        //mora klucot da bide comparable
+        //izbegnuva duplikat klucevi
+        //mapata e sortirana spored klucot
+        //O(logn) za dodavanje, O(logn) za contains, O(logn) iteriranje
+        Map<String, String> treeMap = new TreeMap<>();
+        treeMap.put("FINKI","FINKI");
+        treeMap.put("FinKI","Finki");
+        treeMap.put("NP","Napredno programiranje");
+        treeMap.put("F","Fakultet");
+        treeMap.put("I","Informaticki");
+        treeMap.put("F","Fakultetttt");
+
+        System.out.println(treeMap);
+
+        //HashMap
+        //O(1) dodavanje, O(1) contains, O(N) iteriranje
+        //go izmestuva redosledot
+        //elementite sto se vo tip kluc na mapata mora da ima overriden hashCode method
+        Map<String,String> hashMap = new HashMap<>();
+        hashMap.put("FINKI","FINKI");
+        hashMap.put("FinKI","Finki");
+        hashMap.put("NP","Napredno programiranje");
+        hashMap.put("F","Fakultet");
+        hashMap.put("I","Informaticki");
+        hashMap.put("F","Fakultetttt");
+
+        System.out.println(hashMap);
+
+        //LinkedHashMap
+        //ista kompleksnost so HashMap
+        //go zadrzuva redosledot
+        Map<String,String> linkedHashMap = new LinkedHashMap<>();
+        linkedHashMap.put("FINKI","FINKI");
+        linkedHashMap.put("FinKI","Finki");
+        linkedHashMap.put("NP","Napredno programiranje");
+        linkedHashMap.put("F","Fakultet");
+        linkedHashMap.put("I","Informaticki");
+        linkedHashMap.put("F","Fakultetttt");
+
+        System.out.println(linkedHashMap);
+    }
+}
Index: src/Aud7/NamesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/NamesTest.java b/src/Aud7/NamesTest.java
new file mode 100644
--- /dev/null	(date 1713826166205)
+++ b/src/Aud7/NamesTest.java	(date 1713826166205)
@@ -0,0 +1,73 @@
+package Aud7;
+
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
+import java.util.*;
+
+class Name implements Comparable<Name> {
+    String name;
+    int frequency;
+
+    public Name(String name, int frequency) {
+        this.name = name;
+        this.frequency = frequency;
+    }
+
+
+    @Override
+    public int compareTo(Name o) {
+        return Integer.compare(this.frequency, o.frequency);
+    }
+}
+
+public class NamesTest {
+    private static Map<String, Integer> readNames(InputStream is) {
+        Map<String, Integer> frequencyForName = new HashMap<>();
+        Scanner sc = new Scanner(is);
+        while (sc.hasNextLine()) {
+            String line = sc.nextLine();
+            String[] parts = line.split("\\s+");
+            String name = parts[0];
+            int frequency = Integer.parseInt(parts[1]);
+            frequencyForName.put(name, frequency);
+        }
+        return frequencyForName;
+    }
+
+    public static void main(String[] args) {
+        try {
+            Map<String, Integer> boyNames = readNames(new FileInputStream("src/Aud7/data/boynames.txt"));
+            Map<String, Integer> girlNames = readNames(new FileInputStream("src/Aud7/data/girlsnames.txt"));
+//            System.out.println(girlNames);
+
+            Set<String> allNames = new HashSet<>();
+
+            allNames.addAll(boyNames.keySet());
+            allNames.addAll(girlNames.keySet());
+
+            Map<String, Integer> unisexNames = new HashMap<>();
+
+            allNames.stream()
+                    .filter(name -> boyNames.containsKey(name) && girlNames.containsKey(name))
+                    .forEach(name -> unisexNames.put(name,boyNames.get(name) + girlNames.get(name)));
+
+//            System.out.println(unisexNames);
+
+            //sort the map by value in descending order
+            unisexNames.entrySet()
+                    .stream()
+                    .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
+                    .forEach(entry -> System.out.println(String.format("%s -> %d", entry.getKey(), entry.getValue())));
+
+            //create custom objects of type name and then sort them
+//            allNames.stream()
+//                    .filter(name -> boyNames.containsKey(name) && girlNames.containsKey(name))
+//                    .map(name -> new Name(name,boyNames.get(name)+girlNames.get(name)))
+//                    .sorted(Comparator.reverseOrder())
+//                    .forEach(System.out::println);
+        } catch (FileNotFoundException e) {
+            throw new RuntimeException(e);
+        }
+    }
+}
Index: src/Aud7/data/girlsnames.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/data/girlsnames.txt b/src/Aud7/data/girlsnames.txt
new file mode 100644
--- /dev/null	(date 1713819561608)
+++ b/src/Aud7/data/girlsnames.txt	(date 1713819561608)
@@ -0,0 +1,1000 @@
+Emily 23544
+Emma 19976
+Madison 19240
+Abigail 15492
+Olivia 15453
+Isabella 14908
+Hannah 14553
+Samantha 13436
+Ava 13411
+Ashley 13092
+Sophia 12458
+Elizabeth 12453
+Alexis 11770
+Grace 11633
+Sarah 11263
+Alyssa 10726
+Mia 10663
+Natalie 10579
+Chloe 9406
+Brianna 9218
+Lauren 9098
+Ella 8930
+Anna 8885
+Taylor 8538
+Kayla 8483
+Hailey 8475
+Jessica 7966
+Victoria 7812
+Jasmine 7713
+Sydney 7286
+Julia 6968
+Destiny 6703
+Morgan 6643
+Kaitlyn 6423
+Savannah 6345
+Katherine 6276
+Alexandra 6225
+Rachel 6077
+Lily 5980
+Megan 5783
+Kaylee 5779
+Jennifer 5752
+Angelina 5690
+Makayla 5623
+Allison 5566
+Brooke 5478
+Maria 5450
+Trinity 5370
+Lillian 5141
+Mackenzie 5127
+Faith 5120
+Sofia 5087
+Riley 5051
+Haley 5046
+Gabrielle 4912
+Nicole 4900
+Kylie 4880
+Katelyn 4856
+Zoe 4856
+Paige 4852
+Gabriella 4737
+Jenna 4728
+Kimberly 4679
+Stephanie 4631
+Alexa 4588
+Avery 4585
+Andrea 4574
+Leah 4501
+Madeline 4465
+Nevaeh 4457
+Evelyn 4418
+Maya 4357
+Mary 4327
+Michelle 4241
+Jada 4200
+Sara 4190
+Audrey 4080
+Brooklyn 4064
+Vanessa 4030
+Amanda 4014
+Ariana 3920
+Rebecca 3909
+Caroline 3903
+Amelia 3834
+Mariah 3756
+Jordan 3637
+Jocelyn 3634
+Arianna 3610
+Isabel 3552
+Marissa 3534
+Autumn 3531
+Melanie 3442
+Aaliyah 3387
+Gracie 3305
+Claire 3228
+Isabelle 3220
+Molly 3162
+Mya 3132
+Diana 3113
+Katie 3100
+Leslie 3083
+Amber 3076
+Danielle 3076
+Melissa 3029
+Sierra 2994
+Madelyn 2985
+Addison 2974
+Bailey 2938
+Catherine 2928
+Gianna 2922
+Amy 2913
+Erin 2870
+Jade 2848
+Angela 2834
+Gabriela 2823
+Jacqueline 2817
+Shelby 2786
+Kennedy 2771
+Lydia 2716
+Alondra 2691
+Adriana 2677
+Daniela 2616
+Natalia 2608
+Breanna 2596
+Kathryn 2522
+Briana 2500
+Ashlyn 2494
+Rylee 2485
+Eva 2444
+Kendall 2431
+Peyton 2431
+Ruby 2421
+Alexandria 2418
+Sophie 2397
+Charlotte 2395
+Reagan 2389
+Valeria 2384
+Christina 2377
+Summer 2376
+Kate 2363
+Mikayla 2350
+Naomi 2345
+Layla 2339
+Miranda 2326
+Laura 2312
+Ana 2309
+Angel 2306
+Alicia 2288
+Daisy 2288
+Ciara 2273
+Margaret 2244
+Aubrey 2227
+Zoey 2226
+Skylar 2200
+Genesis 2195
+Payton 2168
+Courtney 2166
+Kylee 2162
+Kiara 2123
+Alexia 2098
+Jillian 2091
+Lindsey 2068
+Mckenzie 2042
+Karen 2041
+Giselle 2031
+Mariana 2017
+Valerie 2000
+Sabrina 1946
+Alana 1942
+Serenity 1942
+Kelsey 1933
+Cheyenne 1921
+Juliana 1919
+Lucy 1915
+Kelly 1914
+Sadie 1910
+Bianca 1897
+Kyra 1889
+Nadia 1882
+Lilly 1879
+Caitlyn 1871
+Jasmin 1870
+Ellie 1867
+Hope 1844
+Cassandra 1837
+Jazmin 1835
+Crystal 1818
+Jordyn 1818
+Cassidy 1809
+Delaney 1802
+Liliana 1764
+Angelica 1762
+Caitlin 1752
+Kyla 1742
+Jayla 1734
+Adrianna 1730
+Tiffany 1729
+Abby 1727
+Carly 1708
+Chelsea 1700
+Camila 1689
+Erica 1686
+Makenzie 1685
+Karla 1684
+Cadence 1655
+Paris 1651
+Veronica 1646
+Mckenna 1643
+Brenda 1633
+Bella 1628
+Maggie 1625
+Karina 1608
+Esmeralda 1599
+Erika 1597
+Makenna 1596
+Julianna 1590
+Elena 1575
+Mallory 1569
+Jamie 1562
+Alejandra 1559
+Cynthia 1543
+Ariel 1542
+Vivian 1528
+Jayden 1497
+Amaya 1492
+Dakota 1478
+Elise 1470
+Haylee 1462
+Josephine 1458
+Aniyah 1457
+Bethany 1454
+Keira 1443
+Aliyah 1442
+Laila 1421
+Camryn 1418
+Fatima 1401
+Reese 1396
+Annabelle 1390
+Monica 1382
+Lindsay 1374
+Kira 1364
+Selena 1350
+Macy 1346
+Hanna 1320
+Heaven 1302
+Clara 1297
+Katrina 1292
+Jazmine 1291
+Jadyn 1290
+Stella 1287
+Kailey 1282
+Alaina 1259
+Allyson 1259
+Guadalupe 1257
+Nina 1257
+Allie 1251
+Rebekah 1250
+Savanna 1241
+Alison 1240
+Piper 1239
+Hayley 1222
+Aniya 1220
+Cameron 1219
+Kendra 1219
+Eleanor 1213
+Kayleigh 1211
+Meghan 1208
+Kara 1205
+Ashlee 1202
+Carmen 1202
+Tessa 1202
+Brooklynn 1184
+Kamryn 1183
+Celeste 1179
+Julissa 1179
+Lizbeth 1179
+Nora 1177
+Brittany 1170
+Cecilia 1168
+Jaden 1159
+Julie 1158
+Joanna 1150
+Desiree 1137
+Michaela 1136
+Alayna 1133
+Alivia 1128
+Miriam 1128
+Esther 1125
+Camille 1122
+Asia 1121
+Carolina 1115
+Tatiana 1108
+Anastasia 1103
+Ashlynn 1094
+Estrella 1090
+Katelynn 1090
+Kaylie 1084
+Emely 1066
+Sienna 1056
+Heather 1043
+Shannon 1036
+Diamond 1035
+Ivy 1027
+April 1026
+Eliana 1026
+Paola 1025
+Leila 1024
+Jayda 1022
+Melody 1022
+Eliza 1021
+Holly 1016
+Natasha 1014
+Claudia 1009
+Daniella 1007
+Skyler 1005
+Sandra 998
+Kaitlin 993
+Nancy 992
+Josie 989
+Callie 988
+Eden 987
+Kirsten 984
+Georgia 982
+Cindy 976
+Heidi 976
+Kristen 970
+Annika 961
+Bridget 961
+Itzel 960
+Helen 947
+Yasmin 947
+Leilani 946
+Rose 946
+Madeleine 941
+Emilee 938
+Aurora 933
+Kiera 930
+Rylie 923
+Kathleen 916
+Tara 913
+Marisol 909
+Denise 908
+Tatum 903
+Dayanara 897
+Kadence 893
+Ryleigh 887
+Anahi 885
+Priscilla 884
+Kristina 883
+Wendy 883
+Ruth 880
+Raven 879
+Brenna 878
+Ximena 877
+Talia 868
+Madalyn 867
+Kaydence 860
+Patricia 859
+Kassandra 858
+Iris 856
+Lexi 856
+Serena 855
+Sage 853
+Perla 850
+Nyla 848
+Lucia 839
+Meredith 837
+Alissa 835
+Sasha 834
+Janiya 832
+Nayeli 832
+Harley 830
+Angie 829
+Lola 825
+Violet 825
+Sidney 824
+Izabella 819
+Fiona 818
+Madisyn 812
+Annie 807
+Samara 806
+Kiley 805
+Mercedes 805
+Kiana 804
+Dulce 802
+Jimena 801
+Litzy 800
+Alina 798
+Kyleigh 796
+Shayla 796
+Marisa 791
+Rachael 786
+Yesenia 780
+Fernanda 779
+Tori 779
+Dana 777
+Genevieve 777
+Christine 776
+Paulina 775
+Lauryn 773
+Harmony 771
+Lesly 768
+Maritza 766
+Casey 765
+Hailee 765
+Nia 762
+Johanna 759
+Rosa 757
+Joselyn 750
+Logan 747
+Marina 745
+Imani 744
+Kaylin 744
+Alice 741
+Cierra 739
+Linda 735
+Hayden 730
+Clarissa 729
+Brynn 727
+Kassidy 726
+Scarlett 725
+Halle 722
+Skye 721
+Malia 719
+Phoebe 717
+Viviana 713
+America 709
+Krystal 709
+Britney 707
+Francesca 707
+Rubi 707
+Gloria 703
+Amya 699
+Emilia 699
+Lana 698
+Shania 695
+Anne 688
+Elaina 687
+Ainsley 679
+Haylie 677
+Lacey 677
+Emerson 672
+Madyson 671
+Virginia 671
+Bryanna 670
+Anya 669
+Maddison 667
+Lila 666
+Elisabeth 665
+Kaleigh 665
+Cora 664
+Ryan 656
+Taryn 655
+Alessandra 654
+Kiersten 654
+Nataly 654
+Tiana 653
+Macie 652
+Teresa 652
+Brielle 650
+Athena 646
+Valentina 646
+Regan 645
+Sarai 643
+Hallie 642
+Jane 642
+Marley 642
+Alyson 641
+Jaiden 639
+Kaitlynn 639
+Lilian 639
+Tania 639
+Whitney 639
+Noelle 638
+Raquel 638
+Miracle 637
+Lena 635
+Teagan 629
+Janiyah 626
+Aileen 625
+Laney 625
+Deanna 623
+Anaya 618
+Carley 618
+Emilie 616
+Tabitha 616
+Amari 615
+Carolyn 615
+Cristina 615
+Alisha 614
+Ayanna 614
+Liberty 612
+Lisa 609
+Alanna 607
+Madilyn 607
+Raegan 607
+Jenny 604
+Anika 600
+Baylee 599
+Jaelyn 599
+India 598
+Abbigail 595
+Lillie 587
+Yadira 585
+Elle 584
+Natalee 582
+Marie 578
+Kailyn 576
+Martha 576
+Tamia 573
+Carla 569
+Janelle 569
+Presley 568
+Hazel 565
+Laci 565
+Mckayla 565
+Kaelyn 560
+Joy 558
+Norah 554
+Ashleigh 553
+Isis 553
+Haleigh 552
+Jaqueline 551
+Destinee 550
+Maia 548
+Kali 540
+Larissa 539
+Sylvia 539
+Danna 536
+Alexus 533
+Kristin 533
+Dominique 532
+Isabela 532
+Willow 532
+Elisa 529
+Justice 529
+Macey 528
+London 526
+Melany 526
+Marlene 520
+Judith 519
+Yasmine 518
+Aspen 517
+Renee 517
+Carlie 516
+Madelynn 516
+Adeline 514
+Helena 514
+Brittney 513
+Cara 513
+Daphne 513
+Lia 510
+Precious 507
+Dayana 505
+Ellen 505
+Janet 504
+Kaley 504
+Melina 504
+Tia 504
+Simone 503
+Monique 500
+Penelope 500
+Skyla 500
+Gwendolyn 498
+Kierra 498
+Marilyn 498
+Zoie 498
+Nathalie 497
+Jaida 494
+Jessie 494
+Kailee 494
+Carissa 493
+Mikaela 493
+Maci 492
+Amara 490
+Lilliana 489
+Aubree 488
+Kenzie 487
+Sharon 487
+Janessa 484
+Sonia 484
+Lorena 482
+Delilah 480
+Araceli 479
+Irene 478
+Tiara 478
+Juliet 477
+Lexie 477
+Alma 470
+Kimora 470
+Amira 468
+Krista 468
+Luna 468
+Jazmyn 467
+Kasey 467
+Lea 467
+Luz 467
+Maribel 466
+Gina 465
+Jaidyn 465
+Shaniya 465
+Karissa 464
+Regina 464
+Saniya 464
+Dylan 462
+Elaine 462
+Reyna 462
+Patience 461
+Susan 460
+Danica 458
+Arely 455
+Cristal 455
+Mariam 454
+Katlyn 453
+Kenya 453
+Carlee 452
+Tess 452
+Janae 449
+Pamela 447
+Arielle 446
+Jolie 444
+Abbey 443
+Hadley 443
+Haven 443
+Cali 442
+Abbie 441
+Kayden 441
+Edith 439
+Karlee 438
+Cheyanne 436
+Noemi 436
+Juliette 434
+Mayra 434
+Kennedi 433
+Kayley 431
+Monserrat 430
+Theresa 430
+Emmalee 429
+Tamara 429
+Jamya 427
+Jazlyn 427
+Damaris 426
+Ingrid 426
+Tyra 424
+Yazmin 424
+Amani 422
+Stacy 420
+Bailee 419
+Kaya 419
+Ann 418
+Gisselle 418
+Gillian 417
+Ansley 415
+Charity 415
+Jaylin 415
+Ally 414
+Cecelia 414
+Jacquelyn 414
+Kendal 414
+Meagan 414
+Catalina 412
+Deborah 412
+Hana 411
+Kaylyn 411
+Mariela 411
+Lizeth 410
+Paula 410
+Thalia 410
+Ayla 409
+Mara 409
+Angelique 407
+Annalise 407
+Kaylynn 407
+Eve 406
+Taniya 404
+Quinn 402
+Celia 401
+Clare 401
+Lainey 400
+Greta 399
+Karlie 399
+Giovanna 398
+Jaylynn 398
+Savanah 398
+Aimee 397
+Alena 397
+Annabella 397
+Lyric 397
+Brisa 396
+Felicity 396
+Evelin 393
+Tanya 393
+Karli 392
+Jaclyn 391
+Maeve 391
+Ashanti 390
+Ashly 390
+Kaia 390
+Aliya 389
+Campbell 389
+Roselyn 389
+Iliana 385
+Aylin 383
+Elyse 383
+Stephany 382
+Aryanna 381
+Jakayla 380
+Amiyah 379
+Aria 379
+Marianna 379
+Parker 379
+Lesley 378
+Liana 378
+Eileen 376
+Barbara 375
+Makena 375
+Ryann 375
+Brandy 373
+Cassie 373
+Sydnee 372
+Zaria 372
+Joslyn 370
+Ayana 369
+Sherlyn 369
+Tianna 369
+Belinda 367
+Kaila 367
+Adrienne 366
+Aisha 366
+Gia 366
+Giana 366
+Aracely 365
+Aubrie 362
+Myah 362
+Taliyah 362
+Aleah 360
+Esperanza 358
+Princess 358
+Trista 358
+Mollie 357
+Aiyana 356
+Carina 355
+Harper 355
+Salma 354
+Saige 353
+Addyson 351
+Alisa 350
+Deja 350
+Tatyana 350
+Rhiannon 349
+Rosemary 348
+Abigayle 346
+Carol 346
+Frida 346
+Julianne 346
+Kelsie 346
+Leanna 346
+Gretchen 345
+Chaya 344
+Elsa 344
+Frances 344
+Hailie 344
+Shyanne 344
+Tyler 342
+Kaiya 341
+Rowan 340
+Shea 340
+Xiomara 340
+Miah 339
+Amiya 337
+Aliza 336
+Annette 335
+Journey 335
+Colleen 334
+Yareli 333
+Annabel 331
+Mattie 331
+Ashton 330
+Gracelyn 329
+Marlee 326
+Tina 326
+Leticia 325
+Brandi 324
+Desirae 324
+Jacey 324
+Jaycee 324
+Laurel 324
+Libby 324
+Saniyah 324
+Jaylene 323
+Karly 323
+Rebeca 322
+Chelsey 321
+Corinne 320
+Destini 320
+Johana 320
+Sarahi 320
+Ada 317
+Lucille 317
+Mikalah 317
+Abril 316
+Lorelei 316
+Arabella 315
+Ciera 315
+Jaliyah 315
+Joyce 315
+Maura 315
+Kayli 314
+Keely 314
+Lara 314
+Chasity 313
+Justine 313
+Magdalena 312
+Blanca 311
+Dalia 311
+Arleth 310
+Emery 310
+Karley 310
+Madalynn 310
+Karol 309
+Amelie 307
+Yahaira 307
+Kaylah 306
+Raina 306
+Alize 305
+Jewel 305
+Toni 305
+Sanaa 303
+Cayla 302
+Donna 301
+Jaylee 301
+Kaylen 301
+Alysa 299
+Arlene 299
+Kaliyah 299
+Paloma 298
+Antonia 297
+Yvette 297
+Jenifer 296
+Makaila 296
+Kianna 295
+Shaylee 295
+Danika 294
+Breana 293
+Kenna 293
+Shayna 293
+Stacey 293
+Carrie 292
+Kenia 292
+Lyla 292
+Meadow 292
+Moriah 292
+Aleena 291
+Riya 291
+Yaritza 291
+Lacie 290
+Nicolette 290
+Bria 289
+Katharine 289
+Lizette 289
+Micaela 289
+Abigale 288
+Sandy 288
+Camilla 287
+Galilea 287
+Jaelynn 287
+Karma 287
+Maliyah 287
+Rayna 287
+Savana 287
+Susana 287
+Aryana 286
+Devyn 286
+Halie 286
+Selina 286
+Siena 286
+Yoselin 286
+Micah 285
+Sariah 284
+Abagail 283
+Iyana 283
+Hillary 282
+Shirley 282
+Amina 281
+Kya 281
+Nichole 280
+Kallie 279
+Kathy 279
+Keyla 279
+Mina 279
+Anabelle 278
+Naima 278
+Miya 277
+Nyasia 277
+Phoenix 277
+Joana 276
+Isabell 275
+Janiah 275
+Adelaide 274
+Jasmyn 274
+Shyann 274
+Tayler 274
+Devin 273
+Flor 273
+Graciela 273
+Jalyn 273
+Charlize 272
+Jaylyn 272
+Citlali 271
+Mireya 271
+Alani 270
+Nya 270
+Elissa 269
+Mira 269
+Anneliese 268
+Elsie 267
+Mandy 267
+Yuliana 267
+Chanel 266
+Zara 266
+Estefania 265
+Maren 265
+Margarita 265
+Taniyah 265
+Angeline 264
+Essence 264
+Reina 264
+Areli 262
+Elliana 262
+Livia 262
+Astrid 261
+Destiney 261
+Jailyn 261
+Candace 260
+Cloe 260
+Nathaly 260
+Unique 260
+Zariah 260
+Celine 259
+Kasandra 259
+Shreya 257
+Diya 256
+Fabiola 256
+Jalynn 256
+Karis 256
+Kinsley 256
+Anais 255
+Anjali 255
+Jolette 255
+Katarina 255
+Charlie 254
+Maleah 254
+Natalya 254
+Delia 253
+Jayleen 253
+Sky 253
+Brylee 252
+Devon 252
+Lacy 252
+Yuridia 252
+Armani 251
+Ebony 251
+Lucero 251
+Marin 251
+Myla 251
+Samira 251
+Tatianna 251
+Drew 250
+Valery 249
+Lina 248
+Roxana 248
+Selah 248
+Averie 247
+Belen 247
+Denisse 247
+Jana 247
+Kinsey 247
+Amaris 246
+Katelin 246
+Celina 245
+Finley 245
+Montserrat 245
+Nikki 245
+Alia 244
+Dania 244
+Elyssa 244
+Addie 243
+Christiana 243
+Estefani 243
+Felicia 243
+Hayleigh 243
+Ireland 243
+Lilianna 243
+Iyanna 242
+Khloe 242
+Silvia 242
+Juana 241
+Kaci 241
+Leyla 241
+Maryjane 241
\ No newline at end of file
Index: src/Aud7/data/boynames.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/data/boynames.txt b/src/Aud7/data/boynames.txt
new file mode 100644
--- /dev/null	(date 1713819452092)
+++ b/src/Aud7/data/boynames.txt	(date 1713819452092)
@@ -0,0 +1,1000 @@
+Jacob 25347
+Michael 23324
+Joshua 22775
+Matthew 21045
+Ethan 21039
+Andrew 20323
+Daniel 19776
+Anthony 19016
+Christopher 18871
+Joseph 18737
+William 18695
+Alexander 17821
+Ryan 17735
+David 17712
+Nicholas 16772
+Tyler 16712
+James 15773
+John 15458
+Jonathan 14180
+Nathan 14116
+Samuel 13967
+Christian 13919
+Noah 13623
+Dylan 13575
+Benjamin 13282
+Logan 13258
+Brandon 12730
+Gabriel 12471
+Zachary 12047
+Jose 11836
+Elijah 11355
+Angel 10788
+Kevin 10756
+Jack 10755
+Caleb 10710
+Justin 10345
+Austin 9963
+Evan 9962
+Robert 9953
+Thomas 9866
+Luke 9840
+Mason 9639
+Aidan 9608
+Jackson 9432
+Isaiah 9310
+Jordan 9190
+Gavin 9188
+Connor 9176
+Aiden 8946
+Isaac 8915
+Jason 8473
+Cameron 8429
+Hunter 8384
+Jayden 8113
+Juan 8101
+Charles 7757
+Aaron 7654
+Lucas 7478
+Luis 7359
+Owen 7065
+Landon 6991
+Diego 6816
+Brian 6814
+Adam 6716
+Adrian 6612
+Kyle 6590
+Eric 6586
+Ian 6567
+Nathaniel 6555
+Carlos 6453
+Alex 6372
+Bryan 6368
+Jesus 6266
+Julian 6030
+Sean 5878
+Carter 5819
+Hayden 5818
+Jeremiah 5681
+Cole 5513
+Brayden 5423
+Wyatt 5276
+Chase 5131
+Steven 4993
+Timothy 4927
+Dominic 4897
+Sebastian 4868
+Xavier 4805
+Jaden 4758
+Jesse 4637
+Devin 4630
+Seth 4615
+Antonio 4610
+Richard 4587
+Miguel 4580
+Colin 4482
+Cody 4450
+Alejandro 4423
+Caden 4356
+Blake 4352
+Carson 4297
+Kaden 4294
+Jake 4092
+Henry 4089
+Liam 4085
+Victor 4062
+Riley 4053
+Ashton 3996
+Patrick 3964
+Bryce 3837
+Brady 3732
+Vincent 3700
+Trevor 3639
+Tristan 3523
+Mark 3448
+Jeremy 3424
+Oscar 3410
+Marcus 3397
+Jorge 3383
+Parker 3354
+Kaleb 3337
+Cooper 3336
+Kenneth 3308
+Garrett 3201
+Joel 3197
+Ivan 3187
+Josiah 3178
+Alan 3162
+Conner 3153
+Eduardo 3139
+Paul 3079
+Tanner 3023
+Braden 3014
+Alexis 3006
+Edward 2929
+Omar 2921
+Nicolas 2906
+Jared 2878
+Peyton 2802
+George 2766
+Maxwell 2761
+Cristian 2715
+Francisco 2700
+Collin 2694
+Nolan 2683
+Preston 2681
+Stephen 2681
+Ayden 2679
+Gage 2666
+Levi 2663
+Dakota 2651
+Micah 2645
+Eli 2631
+Manuel 2619
+Grant 2617
+Colton 2616
+Damian 2598
+Ricardo 2577
+Giovanni 2559
+Andres 2539
+Emmanuel 2530
+Peter 2494
+Malachi 2481
+Cesar 2476
+Javier 2461
+Max 2444
+Hector 2423
+Edgar 2422
+Shane 2415
+Fernando 2403
+Ty 2400
+Jeffrey 2391
+Bradley 2371
+Derek 2366
+Travis 2330
+Brendan 2326
+Shawn 2318
+Edwin 2280
+Spencer 2273
+Mario 2256
+Dalton 2228
+Erick 2212
+Johnathan 2208
+Erik 2203
+Jonah 2175
+Donovan 2156
+Leonardo 2115
+Wesley 2083
+Elias 2078
+Marco 2070
+Trenton 2059
+Devon 2055
+Brody 2004
+Abraham 1978
+Jaylen 1950
+Bryson 1947
+Josue 1934
+Sergio 1931
+Drew 1915
+Damien 1908
+Raymond 1907
+Andy 1891
+Dillon 1861
+Gregory 1860
+Roberto 1839
+Roman 1819
+Martin 1795
+Andre 1786
+Jace 1766
+Oliver 1750
+Miles 1725
+Harrison 1694
+Jalen 1681
+Corey 1671
+Dominick 1662
+Avery 1641
+Clayton 1638
+Pedro 1621
+Israel 1617
+Calvin 1597
+Colby 1580
+Dawson 1572
+Cayden 1553
+Jaiden 1545
+Taylor 1543
+Landen 1510
+Troy 1497
+Julio 1492
+Trey 1467
+Jaxon 1457
+Rafael 1456
+Dustin 1448
+Ruben 1448
+Camden 1442
+Frank 1441
+Scott 1441
+Mitchell 1428
+Zane 1410
+Payton 1403
+Kai 1376
+Keegan 1373
+Skyler 1369
+Brett 1367
+Johnny 1363
+Griffin 1357
+Marcos 1346
+Derrick 1343
+Drake 1314
+Raul 1304
+Kaiden 1300
+Gerardo 1298
+Braxton 1292
+Armando 1289
+Grayson 1284
+Simon 1282
+Kayden 1274
+Ronald 1274
+Angelo 1272
+Leo 1257
+Chance 1251
+Brock 1243
+Lukas 1241
+Jaime 1239
+Lance 1238
+Enrique 1231
+Dante 1226
+Malik 1223
+Tyson 1214
+Emanuel 1213
+Phillip 1212
+Fabian 1208
+Tucker 1205
+Trent 1203
+Allen 1202
+Jakob 1198
+Hudson 1195
+Emilio 1192
+Maddox 1190
+Santiago 1189
+Xander 1184
+Aden 1179
+Rylan 1165
+Kyler 1164
+Kameron 1153
+Pablo 1147
+Cade 1142
+Adan 1135
+Keith 1131
+Asher 1127
+Donald 1124
+Alberto 1122
+Alec 1112
+Darius 1103
+Gustavo 1097
+Saul 1095
+Ryder 1091
+Zion 1091
+Casey 1085
+Gael 1083
+Mathew 1074
+Arturo 1072
+Randy 1069
+Mateo 1064
+Quinn 1064
+Jimmy 1063
+Theodore 1063
+Jude 1059
+Sawyer 1057
+Zackary 1053
+Ezekiel 1051
+Myles 1049
+Corbin 1048
+Danny 1037
+Axel 1033
+Brennan 1028
+Lane 1028
+Jerry 1026
+Dennis 1017
+Lorenzo 1014
+Esteban 1010
+Tony 1009
+Brenden 994
+Damon 991
+Braeden 986
+Louis 986
+Philip 975
+Brayan 964
+Curtis 937
+Charlie 920
+Nickolas 919
+Jayson 908
+Jonathon 899
+Zander 896
+Nikolas 884
+Quentin 884
+Morgan 883
+Ismael 881
+Emiliano 871
+Gary 861
+Tristen 857
+Chandler 854
+Amir 853
+Darren 852
+Albert 850
+Salvador 848
+Mekhi 843
+Abel 842
+Joaquin 836
+Caiden 834
+Jay 834
+Declan 828
+Julius 827
+Alfredo 824
+Camron 823
+Maximilian 823
+Arthur 822
+Holden 822
+Larry 819
+Ezra 817
+Moises 815
+Douglas 807
+Orlando 807
+Keaton 804
+Braylon 796
+Ramon 796
+Bryant 793
+Dallas 793
+Walker 793
+Mauricio 792
+Marvin 791
+Ernesto 789
+Hugo 785
+Joe 783
+Reece 761
+Felix 760
+Yahir 757
+Walter 756
+Cory 754
+Tate 753
+Ricky 752
+Chad 749
+Maximus 749
+Dean 746
+Marc 745
+Braydon 740
+Ali 738
+Elliot 731
+Jonas 731
+Weston 731
+Jaxson 728
+Isiah 726
+Rodrigo 724
+Davis 718
+Easton 718
+Russell 717
+Bennett 715
+Lawrence 709
+Chris 708
+Shaun 706
+Nasir 704
+Kristopher 696
+Luca 696
+Uriel 696
+Eddie 694
+Javon 691
+Issac 687
+Reese 685
+Terry 676
+Micheal 675
+Graham 663
+Amari 654
+Zachariah 647
+Silas 646
+Carl 641
+Maurice 641
+Kade 640
+Elliott 638
+Roger 636
+Beau 632
+Jamarion 629
+Omarion 627
+Leonel 625
+Marshall 624
+Reid 622
+Jadon 621
+Jamari 620
+Dorian 614
+Noe 614
+Tommy 614
+Zachery 612
+Davion 611
+Kelvin 610
+Cohen 609
+Jon 606
+Melvin 602
+Guillermo 601
+Jaylin 601
+Jeffery 598
+Jaydon 594
+Nelson 586
+Deandre 585
+Rowan 584
+Noel 577
+Justice 575
+Branden 574
+Felipe 572
+Jessie 571
+Kristian 565
+Rodney 564
+Jermaine 563
+Frederick 560
+Nathanael 560
+Franklin 558
+Dane 555
+Khalil 555
+Brent 553
+Billy 552
+Jayce 551
+Terrance 550
+Kenny 549
+Quinton 548
+Allan 547
+Skylar 547
+Sam 544
+Jamal 542
+Rogelio 537
+Nehemiah 535
+Quincy 535
+Izaiah 532
+Ahmad 530
+Reed 525
+Roy 522
+Brendon 521
+Desmond 521
+Rene 521
+Mohamed 519
+Kody 518
+Osvaldo 518
+Phoenix 518
+Toby 516
+Jaylon 510
+Wilson 510
+Terrell 506
+Jameson 505
+Conor 503
+Alvin 502
+Solomon 502
+Tomas 502
+Tobias 500
+Triston 499
+Bobby 497
+Pierce 497
+Lincoln 495
+Byron 494
+Cyrus 494
+Rodolfo 491
+Trevon 491
+Will 489
+Rohan 488
+Demetrius 487
+Craig 486
+Anderson 485
+Zackery 484
+Bruce 481
+Reginald 481
+Adolfo 479
+Damion 478
+Wade 476
+Jett 475
+Harley 474
+Joey 473
+Marlon 470
+Bailey 469
+Isaias 469
+Steve 469
+Cruz 467
+River 467
+Willie 467
+Kellen 464
+Gerald 463
+Grady 462
+Blaine 460
+Kendall 460
+Judah 459
+Leon 459
+Marquis 458
+Harry 456
+Francis 453
+Deven 451
+Gilberto 451
+Alfonso 449
+Everett 449
+Dayton 448
+Johnathon 448
+Alonzo 445
+Malcolm 443
+Moses 443
+Finn 442
+Gunnar 441
+Jasper 441
+Kobe 438
+Johan 437
+Talan 436
+Ben 435
+Trace 435
+Ulises 434
+Ezequiel 433
+Titus 433
+Rocco 432
+Ariel 430
+Jamie 428
+Rolando 428
+Warren 428
+Kendrick 427
+Tristin 426
+Jamison 425
+Abram 424
+Ahmed 422
+Jairo 422
+Devan 420
+Jerome 419
+Orion 419
+Vicente 417
+Damarion 416
+Greyson 414
+Ray 412
+Gianni 411
+Kadin 409
+Ramiro 406
+Ronnie 404
+Brodie 401
+Stanley 401
+Jase 400
+Kieran 400
+Porter 400
+Colten 399
+Tyrone 399
+Terrence 398
+Darrell 395
+Jarrett 394
+Alvaro 393
+Braiden 387
+Kolby 384
+Addison 382
+Emerson 382
+Ibrahim 382
+Cedric 377
+Lee 377
+Todd 377
+Emmett 375
+Keenan 375
+Leonard 374
+Alijah 373
+Davin 372
+Gilbert 372
+Karson 372
+Kole 372
+Quintin 372
+Rudy 371
+Darian 370
+Deshawn 370
+Aldo 369
+Neil 368
+Randall 368
+Cristopher 367
+Elisha 365
+Ronan 365
+Efrain 362
+Leland 362
+Davon 361
+Junior 361
+Waylon 360
+Irvin 359
+Coleman 358
+Romeo 357
+Antoine 356
+Jaquan 354
+Camren 353
+Dominik 353
+Talon 353
+Gunner 352
+Kolton 351
+Mohammed 350
+Alexzander 349
+Duncan 346
+Jabari 346
+Amare 345
+Amarion 344
+Jefferson 344
+Mohammad 341
+Kasey 340
+Misael 340
+Brice 339
+Harold 339
+August 338
+Brycen 337
+Draven 337
+Kamron 335
+Asa 333
+Eugene 333
+Aron 332
+Freddy 332
+Julien 332
+Zechariah 331
+Sage 330
+Brooks 328
+Dwayne 328
+Alonso 327
+Maverick 327
+Dashawn 326
+Aydan 325
+Donte 325
+Tyrell 325
+Keagan 324
+Clay 323
+Ernest 323
+Octavio 320
+Brennen 319
+Lewis 319
+Layne 318
+Sincere 318
+Dale 316
+Kenyon 316
+Omari 316
+Alessandro 315
+Tyree 314
+Jair 312
+Demarion 309
+Oswaldo 308
+Raphael 308
+Bradyn 307
+Ignacio 307
+Wayne 307
+Agustin 306
+Cash 305
+Jordon 305
+Davian 304
+Xzavier 304
+Ross 303
+Aryan 302
+Boston 300
+Garret 298
+Lamar 298
+Matteo 298
+Reagan 296
+Dominique 295
+Mike 295
+Rhett 295
+London 294
+Muhammad 294
+Gideon 293
+Humberto 293
+Lawson 293
+Adrien 292
+Clarence 291
+Jadyn 290
+Javion 290
+Derick 289
+Kyan 289
+Salvatore 289
+Kareem 287
+Arjun 286
+Tyrese 286
+Markus 285
+Semaj 285
+Barrett 284
+Gavyn 284
+Kian 284
+Ryland 284
+Jamar 282
+Nathanial 282
+Moshe 281
+Landyn 280
+Ryker 280
+Alfred 278
+Giancarlo 278
+Kane 278
+Malakai 278
+Rory 278
+Darnell 276
+Hamza 276
+Jaron 276
+Ari 275
+Frankie 275
+Aditya 274
+Clinton 274
+Cullen 274
+Keshawn 274
+Milo 274
+Devyn 272
+Armani 271
+Isai 271
+Jaylan 271
+Kamari 271
+Nigel 271
+Jovani 270
+Sterling 269
+Justus 268
+Dillan 267
+Keon 267
+Marques 267
+Nico 267
+Roland 267
+Donavan 266
+Giovanny 266
+Jorden 266
+Rigoberto 266
+Anton 264
+Johnpaul 262
+Konner 262
+Jaeden 261
+Enzo 260
+Josh 260
+Demarcus 258
+Estevan 258
+Rylee 258
+Yair 258
+Cale 257
+Kale 257
+Karl 257
+Braedon 256
+Santos 256
+Ralph 255
+Vance 255
+Alden 254
+Bo 254
+Augustus 253
+Cannon 253
+Darryl 253
+Gaven 253
+Sheldon 253
+Darien 252
+Coby 251
+Glenn 251
+Vaughn 250
+German 249
+Hassan 249
+Seamus 249
+Braulio 248
+Layton 248
+Nathen 247
+Luciano 246
+Roderick 245
+Antony 243
+Elvis 243
+Jovanni 243
+Samir 243
+Ellis 242
+Malaki 242
+Deangelo 240
+Jean 240
+Winston 240
+Stefan 239
+Adriel 238
+Atticus 238
+Clark 238
+Heath 237
+Jamir 237
+Korbin 237
+Bruno 236
+Alexandro 235
+Marquise 235
+Sonny 235
+Deacon 234
+Marcel 233
+Rex 233
+Santino 232
+Mathias 231
+Kylan 230
+Shamar 230
+Cason 229
+Jovanny 229
+Garrison 228
+Nick 228
+Reynaldo 228
+Milton 227
+Brad 226
+Adonis 225
+Makai 225
+Prince 225
+Howard 224
+Jovany 224
+Konnor 224
+Quinten 224
+Remington 224
+Nestor 223
+Cortez 221
+Kaeden 221
+Braylen 219
+Carlo 219
+Bernard 218
+Deon 218
+Sidney 218
+Jordy 217
+Conrad 216
+Pranav 216
+Dangelo 215
+Ean 215
+Houston 215
+Savion 215
+Cael 214
+Elmer 214
+Josef 214
+Antwan 213
+Aydin 213
+Dario 213
+Devonte 213
+Marcelo 213
+Kamden 212
+Keyon 212
+Lucian 212
+Gonzalo 211
+Jan 211
+Kadyn 211
+Rashad 211
+Zain 211
+Tristian 210
+Blaze 209
+Darwin 209
+Elian 209
+Giovani 209
+Haden 209
+Sammy 209
+Yosef 209
+Domenic 208
+Jovan 208
+Matias 208
+Simeon 208
+Nikhil 207
+Teagan 207
+Luka 206
+Zaire 206
+Bronson 205
+Carmine 205
+Chaim 205
+Dexter 205
+Jamel 205
+Paxton 205
+Franco 204
+Gordon 204
+Leandro 204
+Maximillian 204
+Korey 203
+Abdullah 202
+Aedan 202
+Kason 202
+Andreas 201
+Finnegan 201
+Zakary 201
+Kanye 200
+Matthias 200
+Denzel 199
+Reuben 199
+Soren 199
+Travon 199
+Vincenzo 199
+Carmelo 198
+Jacoby 198
+Karter 198
+Ronaldo 198
+Chaz 197
+Damari 195
+Rey 195
+Messiah 194
+Zavier 194
+Broderick 191
+Darrius 191
+Gaige 191
+Maximo 191
+Royce 191
+Shannon 191
+Stephan 191
+Makhi 190
+Gannon 189
+Immanuel 189
+Tyshawn 189
+Cristofer 188
+Ethen 188
+Jeramiah 188
+Fredrick 187
+Sullivan 187
+Norman 186
+Brenton 185
+Campbell 185
+Fredy 185
+Keven 185
+Stone 185
+Clifford 184
+Deshaun 184
+Jordyn 184
+Kamren 184
+Nash 184
+Rishi 184
+Zack 184
+Darin 183
+Destin 183
+Guadalupe 183
+Jarvis 183
+Perry 183
+Dandre 182
+Daryl 182
+Jaidyn 182
+Thaddeus 182
+Elvin 181
+Tayshaun 181
+Valentin 181
+Yusuf 181
+Austen 180
+Camryn 180
+Colt 180
+Darion 180
+Dimitri 180
+Earl 180
+Arnav 179
+Baby 179
+Kelton 179
+Kurt 179
+Leroy 179
+Mariano 179
+Dallin 178
+Dion 178
+Reilly 178
+Efren 177
+Fidel 177
+Jaydin 177
+Rocky 177
+Shayne 177
+Bernardo 176
+Branson 176
+Hugh 176
+Maxim 176
+Shea 176
+Carlton 175
+Dylon 175
+Gauge 175
+Cristobal 174
+Irving 174
+Marquez 174
+Ulysses 174
+Jax 173
+Mikel 173
+Rhys 173
+Van 173
+Cornelius 172
+Geoffrey 172
+Eliseo 171
+Jaren 171
+Kennedy 171
+Markell 171
+Adin 170
+Isaak 170
+Keanu 170
+Keyshawn 170
+Tariq 170
+Daquan 169
+Edison 169
+Bridger 168
+Fisher 168
+Jaheim 168
+Tye 168
+Blaise 167
\ No newline at end of file
Index: src/Aud7/PhoneBookTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/PhoneBookTest.java b/src/Aud7/PhoneBookTest.java
new file mode 100644
--- /dev/null	(date 1713886454809)
+++ b/src/Aud7/PhoneBookTest.java	(date 1713886454809)
@@ -0,0 +1,130 @@
+package Aud7;
+
+import java.util.*;
+
+class DuplicateNumberException extends Exception {
+    public DuplicateNumberException(String message) {
+        super(message);
+    }
+}
+
+class Contact implements Comparable<Contact> {
+    String name;
+    String number;
+
+    public Contact(String name, String number) {
+        this.name = name;
+        this.number = number;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public String getNumber() {
+        return number;
+    }
+
+    @Override
+    public String toString() {
+        return String.format("%s %s", name, number);
+    }
+
+    List<String> getSubNumbers() {
+        List<String> results = new ArrayList<>();
+        for (int i = 3; i <= this.number.length(); i++) { //for the length of the subnumber
+            for (int j = 0; j <= number.length() - i; j++) { //for the begining of the subnumber
+                results.add(number.substring(j, j + i));
+            }
+        }
+        return results;
+    }
+
+    @Override
+    public int compareTo(Contact o) {
+        int res = this.name.compareTo(o.name);
+        return res == 0 ? this.number.compareTo(o.number) : res;
+    }
+}
+
+class PhoneBook {
+    Map<String, String> namesByPhoneNumber;
+    Map<String, Set<Contact>> contactsBySubnumber;
+    Map<String, Set<Contact>> contactsByName;
+
+    PhoneBook() {
+        namesByPhoneNumber = new HashMap<>();
+        contactsBySubnumber = new HashMap<>();
+        contactsByName = new HashMap<>();
+    }
+
+    public void addContact(String name, String number) throws DuplicateNumberException {
+        if (namesByPhoneNumber.containsKey(number))
+            throw new DuplicateNumberException(number);
+
+        Contact c = new Contact(name, number);
+
+        namesByPhoneNumber.put(number, name);
+
+        contactsByName.putIfAbsent(name, new TreeSet<>());
+        contactsByName.get(name).add(c);
+
+        for (String subNumber : c.getSubNumbers()) {
+            contactsBySubnumber.putIfAbsent(subNumber, new TreeSet<>());
+            contactsBySubnumber.get(subNumber).add(c);
+        }
+
+
+    }
+
+    public void contactsByNumber(String number) {
+        if (!contactsBySubnumber.containsKey(number)) {
+            System.out.println("NOT FOUND");
+        } else {
+            contactsBySubnumber.get(number)
+                    .forEach(System.out::println);
+        }
+    }
+
+    public void contactsByName(String name) {
+        if (!contactsByName.containsKey(name)) {
+            System.out.println("NOT FOUND");
+        } else {
+            contactsByName.get(name)
+                    .forEach(System.out::println);
+        }
+    }
+}
+
+public class PhoneBookTest {
+
+    public static void main(String[] args) {
+        PhoneBook phoneBook = new PhoneBook();
+        Scanner scanner = new Scanner(System.in);
+        int n = scanner.nextInt();
+        scanner.nextLine();
+        for (int i = 0; i < n; ++i) {
+            String line = scanner.nextLine();
+            String[] parts = line.split(":");
+            try {
+                phoneBook.addContact(parts[0], parts[1]);
+            } catch (DuplicateNumberException e) {
+                System.out.println(e.getMessage());
+            }
+        }
+        while (scanner.hasNextLine()) {
+            String line = scanner.nextLine();
+            System.out.println(line);
+            String[] parts = line.split(":");
+            if (parts[0].equals("NUM")) {
+                phoneBook.contactsByNumber(parts[1]);
+            } else {
+                phoneBook.contactsByName(parts[1]);
+            }
+        }
+    }
+
+}
+
+// Вашиот код овде
+
Index: src/Aud7/SetIntro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud7/SetIntro.java b/src/Aud7/SetIntro.java
new file mode 100644
--- /dev/null	(date 1713813906127)
+++ b/src/Aud7/SetIntro.java	(date 1713813906127)
@@ -0,0 +1,45 @@
+package Aud7;
+
+import java.util.*;
+
+public class SetIntro {
+    public static void main(String[] args) {
+        //pristap O(logn), iteriranje O(nlogn), dodavanje O(logn), brisenje O(nlogn)
+        //zadaci vo koi se bara da se cuvaat unikatni elementi i istite da se sortirani
+        Set<Integer> treeIntSet = new TreeSet<>(Comparator.reverseOrder());
+        for (int i = 1; i <= 10; i++) {
+            treeIntSet.add(i);
+        }
+        System.out.println(treeIntSet);
+
+        //najednostavna vremenska kompleksnost
+        //Ako se bara vnesuvanje na elementi so O(n) togas ova e potrebno
+        //nema duplikati
+        //redosledot se izmestuva
+        Set<Integer> hashIntSet = new HashSet<>();
+        for (int i = 1; i <= 10; i++) {
+            hashIntSet.add(i);
+        }
+        System.out.println(hashIntSet);
+
+
+        Set<String> hashStringSet = new HashSet<>();
+        hashStringSet.add("FINKI");
+        hashStringSet.add("finki");
+        hashStringSet.add("NP");
+        hashStringSet.add("Napredno");
+
+        System.out.println(hashStringSet);
+
+        //LinkedHashSet
+        //za da se zacuva redosledot na vnesuvanje
+        //O(1) (kako obicen HashSet)
+        Set<String> linkedHashStringSet = new HashSet<>();
+        linkedHashStringSet.add("FINKI");
+        linkedHashStringSet.add("finki");
+        linkedHashStringSet.add("NP");
+        linkedHashStringSet.add("Napredno");
+
+        System.out.println(linkedHashStringSet);
+    }
+}
Index: src/Aud6/ReverseListTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Aud6;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class ReverseListTest {\r\n\r\n    public static <T> void reversePrint1(Collection<T> collection) {\r\n        List<T> list = new ArrayList<>(collection);\r\n        for (int i = list.size() - 1; i >= 0; i--) {\r\n            System.out.println(list.get(i));\r\n        }\r\n    }\r\n\r\n    public static <T> void reversePrint2(Collection<T> collection){\r\n        List<T> list = new ArrayList<>(collection);\r\n        Collections.reverse(list);\r\n        list.forEach(System.out::println);\r\n    }\r\n    public static void main(String[] args) {\r\n        List<Integer> ints = List.of(1,2,3,4,5,6,7,8,9,10);\r\n        reversePrint1(ints);\r\n        reversePrint2(ints);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud6/ReverseListTest.java b/src/Aud6/ReverseListTest.java
--- a/src/Aud6/ReverseListTest.java	(revision a29b9d7c9ea4132dd355f789aed4a8e5917ac2df)
+++ b/src/Aud6/ReverseListTest.java	(date 1713810950957)
@@ -14,14 +14,15 @@
         }
     }
 
-    public static <T> void reversePrint2(Collection<T> collection){
+    public static <T> void reversePrint2(Collection<T> collection) {
         List<T> list = new ArrayList<>(collection);
         Collections.reverse(list);
         list.forEach(System.out::println);
     }
+
     public static void main(String[] args) {
-        List<Integer> ints = List.of(1,2,3,4,5,6,7,8,9,10);
-        reversePrint1(ints);
-        reversePrint2(ints);
+        List<Integer> integers = List.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
+        reversePrint1(integers);
+        reversePrint2(integers);
     }
 }
\ No newline at end of file
Index: src/Aud4/Shapes1Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Aud4;\r\n\r\nimport java.io.*;\r\nimport java.util.Arrays;\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\nclass Square {\r\n    int side;\r\n\r\n    public Square(int side) {\r\n        this.side = side;\r\n    }\r\n\r\n    public int getPerimeter() {\r\n        return 4 * side;\r\n    }\r\n\r\n}\r\n\r\nclass Canvas implements Comparable<Canvas> {\r\n    String canvasID;\r\n    List<Square> squares;\r\n\r\n    public Canvas(String canvasID, List<Square> squares) {\r\n        this.canvasID = canvasID;\r\n        this.squares = squares;\r\n    }\r\n\r\n    public static Canvas createCanvas(String line) {\r\n        String[] parts = line.split(\"\\\\s+\");\r\n        String id = parts[0];\r\n\r\n//        List<Square> squares = new ArrayList<>();\r\n//        for (int i = 1; i < parts.length; i++){\r\n//            squares.add(new Square(Integer.parseInt(parts[i])));\r\n//        }\r\n\r\n        List<Square> squares = Arrays.stream(parts).skip(1)\r\n                .map(part -> Integer.parseInt(part))\r\n                .map(side -> new Square(side))\r\n                .collect(Collectors.toList());\r\n\r\n        return new Canvas(id, squares);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return String.format(\"%s %d %d\",\r\n                canvasID,\r\n                squares.size(),\r\n                sumOfPerimeter());\r\n    }\r\n\r\n    private int sumOfPerimeter(){\r\n        return squares.stream().mapToInt(Square::getPerimeter).sum();\r\n    }\r\n    @Override\r\n    public int compareTo(Canvas o) {\r\n        return Integer.compare(this.sumOfPerimeter(),o.sumOfPerimeter());\r\n    }\r\n}\r\n\r\nclass ShapesApplication {\r\n    List<Canvas> canvases;\r\n    public int readLargestCanvasTo(InputStream in) {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(in));\r\n        canvases = br.lines()\r\n                .map(line -> Canvas.createCanvas(line))\r\n                .collect(Collectors.toList());\r\n        return canvases.stream()\r\n                .mapToInt(canvas -> canvas.squares.size())\r\n                .sum();\r\n    }\r\n    public void printLargestCanvasTo(OutputStream out) {\r\n        PrintWriter pw = new PrintWriter(out);\r\n\r\n        Canvas max = canvases.stream().max(Comparator.naturalOrder()).get();\r\n\r\n        pw.println(max);\r\n        pw.flush();\r\n    }\r\n}\r\npublic class Shapes1Test {\r\n    public static void main(String[] args) {\r\n        ShapesApplication shapesApplication = new ShapesApplication();\r\n\r\n        System.out.println(\"===READING SQUARES FROM INPUT STREAM===\");\r\n        System.out.println(shapesApplication.readLargestCanvasTo(System.in));\r\n        System.out.println(\"===PRINTING LARGEST CANVAS TO OUTPUT STREAM===\");\r\n        shapesApplication.printLargestCanvasTo(System.out);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Aud4/Shapes1Test.java b/src/Aud4/Shapes1Test.java
--- a/src/Aud4/Shapes1Test.java	(revision a29b9d7c9ea4132dd355f789aed4a8e5917ac2df)
+++ b/src/Aud4/Shapes1Test.java	(date 1701467802932)
@@ -1,93 +1,102 @@
 package Aud4;
-
 import java.io.*;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Comparator;
 import java.util.List;
 import java.util.stream.Collectors;
 
 class Square {
-    int side;
+    int size;
 
-    public Square(int side) {
-        this.side = side;
+    public Square(int size) {
+        this.size = size;
     }
 
-    public int getPerimeter() {
-        return 4 * side;
+    int getPerimeter(){
+        return 4 * size;
     }
-
 }
 
 class Canvas implements Comparable<Canvas> {
-    String canvasID;
-    List<Square> squares;
+    String ID;
+    List<Square> squareList;
 
-    public Canvas(String canvasID, List<Square> squares) {
-        this.canvasID = canvasID;
-        this.squares = squares;
+    public Canvas(String ID, List<Square> squareList) {
+        this.ID = ID;
+        this.squareList = squareList;
     }
 
-    public static Canvas createCanvas(String line) {
+    public static Canvas create(String line){
         String[] parts = line.split("\\s+");
-        String id = parts[0];
+        String ID = parts[0];
+        List<Square> squares = new ArrayList<>();
 
-//        List<Square> squares = new ArrayList<>();
-//        for (int i = 1; i < parts.length; i++){
-//            squares.add(new Square(Integer.parseInt(parts[i])));
-//        }
-
-        List<Square> squares = Arrays.stream(parts).skip(1)
-                .map(part -> Integer.parseInt(part))
-                .map(side -> new Square(side))
+        squares = Arrays.stream(parts)
+                .skip(1)
+                .map(str -> new Square(Integer.parseInt(str)))
                 .collect(Collectors.toList());
+        return new Canvas(ID,squares);
+    }
 
-        return new Canvas(id, squares);
+    int totalSquares(){
+        return squareList.size();
     }
 
-    @Override
-    public String toString() {
-        return String.format("%s %d %d",
-                canvasID,
-                squares.size(),
-                sumOfPerimeter());
+    int totalPerimeter(){
+        return squareList.stream().mapToInt(Square::getPerimeter).sum();
     }
 
-    private int sumOfPerimeter(){
-        return squares.stream().mapToInt(Square::getPerimeter).sum();
-    }
+
     @Override
     public int compareTo(Canvas o) {
-        return Integer.compare(this.sumOfPerimeter(),o.sumOfPerimeter());
+        return Integer.compare(this.totalPerimeter(),o.totalPerimeter());
+    }
+
+    @Override
+    public String toString() {
+        return String.format("%s %d %d",ID,totalSquares(),totalPerimeter());
     }
 }
 
 class ShapesApplication {
     List<Canvas> canvases;
-    public int readLargestCanvasTo(InputStream in) {
-        BufferedReader br = new BufferedReader(new InputStreamReader(in));
+    public ShapesApplication() {
+        canvases = new ArrayList<>();
+    }
+
+    public int readCanvases (InputStream inputStream) throws IOException {
+        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
+
         canvases = br.lines()
-                .map(line -> Canvas.createCanvas(line))
+                .map(Canvas::create)
                 .collect(Collectors.toList());
+
+        br.close();
         return canvases.stream()
-                .mapToInt(canvas -> canvas.squares.size())
+                .mapToInt(Canvas::totalSquares)
                 .sum();
     }
-    public void printLargestCanvasTo(OutputStream out) {
+
+    public void printLargestCanvasTo(PrintStream out) {
         PrintWriter pw = new PrintWriter(out);
 
         Canvas max = canvases.stream().max(Comparator.naturalOrder()).get();
-
         pw.println(max);
         pw.flush();
     }
 }
+
 public class Shapes1Test {
     public static void main(String[] args) {
         ShapesApplication shapesApplication = new ShapesApplication();
 
         System.out.println("===READING SQUARES FROM INPUT STREAM===");
-        System.out.println(shapesApplication.readLargestCanvasTo(System.in));
+        try {
+            System.out.println(shapesApplication.readCanvases(System.in));
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
         System.out.println("===PRINTING LARGEST CANVAS TO OUTPUT STREAM===");
         shapesApplication.printLargestCanvasTo(System.out);
     }
